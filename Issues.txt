#Issue: 2
Hilfetext von optparse-applicative übersetzten

Eigene helper-Funktion erstellen.

Außerdem sämtliche Hilfetexte in Language.hs auslagern.
---------------
#Issue: 4
Beispiel-Schaltpläne erstellen

Beispiel-Schaltpläne zum Anschluss der Schiene an den Rhaspberry Pi erstellen.

In der ReadMe erwähnen/verlinken.
---------------
#Issue: 7
gi-gtk/gi-gtk-declarative verwenden?

gi-gtk scheint neuer und besser gewartet zu sein.

Wirft auf Rhaspberry Pi bisher Fehlermeldungen.
---------------
#Issue: 12
Erlaube "Warten auf Signal"

Ergänze "Warten"-Funktion von Plänen auf ein Signal (Pin-Input = HIGH/LOW) zu warten.  
Zeit-basierte Lösung wird weiterhin unterstützt.

Mögliche Realisierung über Kontaktschienen (Ground-Kontakt durch Zug verbunden).
~~~~~~~~~~~~~~~
#Comment: 782711033
Implementiert, aber bisher noch keine sinnvolle Anschlussmöglichkeit gefunden (löst zu unsinnigen Zeiten aus, z.B. bei Weichen auf der anderen Seite der Platte).
---------------
#Issue: 13
stack 2.1.1 error message

to keep for another machine

```
pi@raspberrypi:~ $ stack setup --resolver=lts-11.22
Found an invalid compiler at "/home/pi/.stack/programs/arm-linux/ghc-8.2.2/bin/ghc-8.2.2": Control.Exception.Safe.throwString called with:

Could not find any of: ["/home/pi/.stack/programs/arm-linux/ghc-8.2.2/bin/haddock-8.2.2","/home/pi/.stack/programs/arm-linux/ghc-8.2.2/bin/haddock-ghc-8.2.2","/home/pi/.stack/programs/arm-linux/ghc-8.2.2/bin/haddock","/home/pi/.stack/programs/arm-linux/ghc-8.2.2/bin/haddock-ghc"]
Called from:
  throwString (src/Stack/Setup.hs:721:25 in stack-2.1.1-GtK6XRqT1yE8D8XGzFLzrs:Stack.Setup)

```
~~~~~~~~~~~~~~~
#Comment: 581142758
Can be solved following instructions in this blog post:
https://svejcar.dev/posts/2019/09/23/haskell-on-raspberry-pi-4/#solving-troubles-with-ghc
---------------
#Issue: 14
Code-Stil vereinheitlichen

-    hlint berücksichtigen(?)
-    Konstruktoren nur wenn notwendig in Klammern setzten
-    Argumente von Typkonstruktoren eingerückt, jeweils in neuer Zeile
-    Funktionen ohne Pattern match (nur ein Variablen-Pattern) ohne extra Leerzeichen
-    Alle (auch eigene) Module mit Import-Liste
-    Namen auf Deutsch
-    Verwendung der Spracherweiterungen
        - ScopedTypeVariables
            explizites `forall a.` in Deklaration bindet a als festen Typ für die gesamte Funktion (auch let/where-Deklarationen)
            erlaubt vorher teilweise unmögliche Typ-Deklarationen (z.B. res :: a in einem where-Binding als Rückgabewert der Funktion verwendbar)
        - OverlappableInstances
              {-# Overlappable #-}/{-# Overlapping #-} bei Instanz-Deklaration
              allgemeinen Fall abdeckbar, ohne Spezial-Instanzen zu verhindern
              Benötigt Spracherweiterungen FlexibleInstances, UndecidableInstances, MonoLocalBinds (?)
- etc.
~~~~~~~~~~~~~~~
#Comment: 771699436
Deutlich besser geworden, vor allem durch automatische floskell-Anwendung und hlint-Anzeige durch haskell-language-server (plugins).

Bleibt offen, da es nie verkehrt ist einen reminder dafür zu haben. ;)
---------------
#Issue: 19
Test-Suite erstellen?

Muss gepflegt werden um Sinn zu machen.
Nachdem das de-facto ein persönliches Projekt ist vermutlich den Aufwand nicht Wert.
---------------
#Issue: 21
Beispiel-Schaltpläne erstellen

Beispiel-Schaltpläne zum Anschluss der Schiene an den Raspberry Pi erstellen.
In der ReadMe erwähnen/verlinken.
---------------
#Issue: 22
Allgemeines(Debug) Anschluss-Objekt mit allen möglichen Funktionen erstellen?

- Strom an/aus
    permanent
    auf Zeit
- PWM
- Signal erkennen
    wenn implementiert
---------------
#Issue: 23
CPP im Code entfernen

- Durch Plugin-System ersetzen?
    - Cmd-UI immer vorhanden
    - Bei Programmstart durchsuchen des Ordners "./UI/"
        Für jede vorhandene Datei biete es als Option für UI an
        Erwarte eine main :: IO ()-Funktion, welche bei Auswahl aufgerufen wird.
    - https://hackage.haskell.org/package/plugins
    - https://hackage.haskell.org/package/dynamic-loader
- Verschiedene Executables (in package.yaml) macht vtl. mehr Sinn
---------------
#Issue: 24
Code-Stil vereinheitlichen

-    hlint berücksichtigen(?)
-    Alle (auch eigene) Module mit Import-Liste
-    Namen auf Deutsch
-    Verwendung der Spracherweiterungen
      - ScopedTypeVariables
            explizites `forall a.` in Deklaration bindet a als festen Typ für die gesamte Funktion (auch let/where-Deklarationen)
            erlaubt vorher teilweise unmögliche Typ-Deklarationen (z.B. res :: a in einem where-Binding als Rückgabewert der Funktion verwendbar)
       - OverlappableInstances
            {-# Overlappable #-}/{-# Overlapping #-} bei Instanz-Deklaration
            allgemeinen Fall abdeckbar, ohne Spezial-Instanzen zu verhindern
            Benötigt Spracherweiterungen FlexibleInstances, UndecidableInstances, MonoLocalBinds (?)
            Done
-    floskell.json verbessern
       -    alte Ideen:
            Konstruktoren nur wenn notwendig in Klammern setzten
            Argumente von Typkonstruktoren eingerückt, jeweils in neuer Zeile
            Funktionen ohne Pattern match (nur ein Variablen-Pattern) ohne extra Leerzeichen
       -    aktuelle Version sollte für alle Dateien angewendet sein
       -    formatOnSave ist ebenfalls aktiviert
-    etc.
---------------
#Issue: 25
Implementiere Server/Client-Modus:

- Raspi läuft im Server-Modus und reagiert auf eingehende Nachrichten (evtl. nur von fester IP-Adresse)
    stdout-Ausgabe der eigene IP-Adresse bei Start
- Client sendet Nachrichten an angegebene TCP-Adresse
- Zusätzliche Kommandozeilenoption:
    --ip
        Gibt die eigene IP-Adresse aus und beendet sich
- Benötigte Packages:
    - network-info
        eigene IP-Adresse
    - network-simple
        TCP-Nachrichten mit einfachem API
---------------
#Issue: 26
Gtk-UI, Plan Hinzufügen verbessern

Ersetzten des Auswahl-Fensters durch ComboBox?
    muss bei öffnen des Dialogs jedesmal neu gefüllt/an aktuellen Zustand angepasst werden
---------------
#Issue: 27
Polysemy anstelle von mtl verwenden

Hauptsächlich zum ausprobieren, ich mag aber auch die Constraints
Wegen version constraints anstelle fused-effects in Gleisplan ausprobiert
---------------
#Issue: 28
Einstellungen in yaml-Datei (o.ä.) speichern?

- Sprache
- Gtk-UI: Einzelseiten
- UI?
- --load filepath?
---------------
#Issue: 29
Gtk-UI benötigt lange, bis etwas zu sehen ist

- Willkommens-Fenster, evtl. mit Fortschrittsanzeige anzeigen
- Dummy-Fenster wird erstellt
    - momentan ohne Funktion
    - reagiert auf keine Eingaben
    - zeigt zumindest an, dass etwas passiert
---------------
#Issue: 30
Ändere Liste zu (Map Name a)

- newtype NameSet a = NameSet (Set (Benannt a))
    ```
    class MitName a where
        erhalteName :: a -> Text
    instance (MitName a) => Ord (Benannt a)
    ```
- newtype NameSet a = NameSet (Map Name a)
    ```
    insert :: a -> NameSet a -> Maybe a
        Rückgabe: bisheriger Wert
    remove :: a -> NameSet a -> Bool
        Rückgabe: Wert vorhanden == True
    ````
    Instanzen: Eq, Foldable, IsList, Traversable(?)
- GTK-UI:
    Plan/Wegstrecke-Aktionen können werden ebenfalls angezeigt werden
- Vermeide doppelte Einträge
- Laden einer Liste schlägt momentan für gesamte Liste fehl
    Elementweise überprüfen und nur fehlgeschlagene ignorieren
    Nach Laden Liste mit fehlgeschlagenen Elementen anzeigen
    Nicht für Wegstrecken-Element-Listen verwenden!
- Entfernen funktioniert nur, wenn keine Wegstrecke/Plan betroffen
    Alternativ ebenfalls entfernen
---------------
#Issue: 31
Pin-Setup bei Hinzufügen

pinMode pin OUTPUT
    INPUT bei Signal-Pins
---------------
#Issue: 32
Mit..-Klassen durch typ-Synonyme von it-has/data-has ersetzen?

http://hackage.haskell.org/package/it-has
http://hackage.haskell.org/package/data-has
---------------
#Issue: 33
Laden von Plänen mit AusführenPlan (andere Pläne) schlägt fehl (Gtk-UI)

vermutlich schlägt Umwandlung in PlanGui fehl, weil andere Pläne nicht gefunden werden.
---------------
#Issue: 34
gi-gtk/gi-gtk-declarative verwenden?

- gi-gtk scheint neuer und besser gewartet zu sein.
    Übersetzung fertig
- Wirft auf Raspberry Pi bisher Fehlermeldungen.
    Warten bis eine neue GHC-Version auf Raspi funktioniert?
        8.6.3 benötigt besondere Behandlung: https://svejcar.dev/posts/2019/09/23/haskell-on-raspberry-pi-4/
        funktioniert auf Windows nicht (TemplateHaskell)!
- ghc 8.10.1 scheint wieder zu funktionieren
    Probleme mit stack
        aktuell wird cabal-install versucht
            kann auf raspi3 (1GB RAM) nicht kompiliert werden (Cabal, out-of-memory)?
- gi-gtk-Funktionen sind meistens MonadIO
    die meisten liftIO-Blöcke sind nicht mehr notwendig
______________________________
#Issue: 20
Hilfetext von optparse-applicative übersetzten

Eigene helper-Funktion erstellen.
Außerdem sämtliche Hilfetexte in Language.hs auslagern.
~~~~~~~~~~~~~~~
#Comment: 782710296
oops, duplicate of #2 
